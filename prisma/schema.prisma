// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String             @id @default(uuid())
  username String             @unique
  email    String             @unique
  password String
  matches  MatchesOnPlayers[]
  legs     LegsOnPlayers[]
  visits   Visit[]
}

model Match {
  id      String             @id @default(uuid())
  players MatchesOnPlayers[]
  legs    Leg[]
}

model Leg {
  id         String          @id @default(uuid())
  players    LegsOnPlayers[]
  match      Match           @relation(fields: [matchId], references: [id])
  matchId    String
  isFinished Boolean         @default(false)
  visits     Visit[]
}

model LegsOnPlayers {
  leg       Leg    @relation(fields: [legId], references: [id])
  legId     String
  legPlayer User   @relation(fields: [playerId], references: [id])
  playerId  String
  points    Int    @default(501)

  @@id([legId, playerId])
}

model MatchesOnPlayers {
  match       Match  @relation(fields: [matchId], references: [id])
  matchId     String
  matchPlayer User   @relation(fields: [playerId], references: [id])
  playerId    String
  index       Int

  @@id([matchId, playerId])
}

model Visit {
  id         String  @id @default(uuid())
  player     User    @relation(fields: [playerId], references: [id])
  playerId   String
  leg        Leg     @relation(fields: [legId], references: [id])
  legId      String
  darts      Dart[]
  isFinished Boolean @default(false)
}

model Dart {
  id      String @id @default(uuid())
  value   Int
  field   Int
  segment Int
  visit   Visit  @relation(fields: [visitId], references: [id])
  visitId String
}
